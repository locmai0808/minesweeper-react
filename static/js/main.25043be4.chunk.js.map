{"version":3,"sources":["components/Cell.jsx","components/Timer.jsx","components/Board.jsx","components/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Cell","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props$cell","props","cell","revealed","flagged","mine","val","_this$props","onClick","onContextMenu","className","boom","react_default","a","createElement","getValue","Component","Timer","_this","timer","setInterval","started","clockIn","clearInterval","time","levels","level","height","width","mines","Board","call","newGame","progress","flags","setState","board","initBoard","status","godMode","i","size","concat","toConsumableArray","addMines","cellIndex","j","m","w","_loop","index","randomNumber","square","map","includes","minesLoc","addNeighbor","minesLocation","forEach","Math","floor","random","copy","state","handleClick","reveal","fillBoard","_ref","floodFill","sendData","logged","fetch","localStorage","id","name","Date","accessToken","rightClick","e","preventDefault","NotificationManager","info","split","Number","s","cheat","changeLevel","renderBoard","components_Cell","Fragment","lib","Row","Col","md","style","color","Button","variant","disabled","components_Timer","NavBar","Navbar","bg","Brand","alt","src","Nav","NavbarBrand","App","components_NavBar","Container","components_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uQAwCeA,EAtCf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,WAAAC,MAAA,WACa,IAAAC,EACgCT,KAAKU,MAAMC,KAA5CC,EADCH,EACDG,SAAUC,EADTJ,EACSI,QAASC,EADlBL,EACkBK,KAAMC,EADxBN,EACwBM,IACjC,OAAKH,EACDE,EAAa,eACVC,GAAY,KAFGF,EAAU,eAAO,OAH3C,CAAAN,IAAA,SAAAC,MAAA,WAQW,IAAAQ,EACkChB,KAAKU,MAAtCC,EADDK,EACCL,KAAMM,EADPD,EACOC,QAASC,EADhBF,EACgBE,cAWnBC,EACF,QACCR,EAAKC,SAAW,YAAc,KAC9BD,EAAKC,UAAYD,EAAKI,IAbN,CACjB,OACA,OACA,SACA,QACA,QACA,OACA,SACA,UAKwCJ,EAAKI,IAAM,GAAK,KACvDJ,EAAKE,QAAU,WAAa,KAC5BF,EAAKS,KAAO,QAAU,IACzB,OACEC,EAAAC,EAAAC,cAAA,OACEN,QAASA,EACTE,UAAWA,EACXD,cAAeA,GAEdlB,KAAKwB,gBAhCd5B,EAAA,CAA0B6B,aCkBXC,EAlBf,SAAA7B,GAAA,SAAA6B,IAAA,OAAA5B,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,GAAA5B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA4B,EAAA7B,GAAAC,OAAAQ,EAAA,EAAAR,CAAA4B,EAAA,EAAAnB,IAAA,oBAAAC,MAAA,WACsB,IAAAmB,EAAA3B,KAClBA,KAAK4B,MAAQC,YAAY,WACnBF,EAAKjB,MAAMoB,SACbH,EAAKjB,MAAMqB,WAEZ,OANP,CAAAxB,IAAA,uBAAAC,MAAA,WAUIwB,cAAchC,KAAK4B,SAVvB,CAAArB,IAAA,SAAAC,MAAA,WAcI,OAAOa,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SAASnB,KAAKU,MAAMuB,UAd9CP,EAAA,CAA2BD,6CCQrBS,SAAS,CACb,CAAEC,MAAO,OAAQC,OAAQ,EAAGC,MAAO,EAAGC,MAAO,IAC7C,CAAEH,MAAO,OAAQC,OAAQ,GAAIC,MAAO,GAAIC,MAAO,IAC/C,CAAEH,MAAO,SAAUC,OAAQ,GAAIC,MAAO,GAAIC,MAAO,MAkWpCC,EA/Vf,SAAA1C,GACE,SAAA0C,EAAY7B,GAAO,IAAAiB,EAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjBZ,EAAA7B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAAC,KAAAxC,KAAMU,KA0BR+B,QAAU,WACRd,EAAKe,SAAW,EAChBf,EAAKgB,MAAQ,EACbhB,EAAKiB,SAAS,CACZC,MAAOlB,EAAKmB,YACZC,OAAQ,aACRjB,QAAS,EACTkB,QAAS,EACTf,KAAM,WAnCSN,EAwCnBmB,UAAY,WAEV,IADA,IAAID,EAAQ,GACHI,EAAI,EAAGA,EAAItB,EAAKuB,KAAMD,IAC7BJ,EAAK,GAAAM,OAAArD,OAAAsD,EAAA,EAAAtD,CAAO+C,GAAP,CAAc,CAAE/B,KAAM,EAAGF,SAAU,EAAGC,QAAS,EAAGE,IAAK,EAAGK,KAAM,KAEvE,OAAOyB,GA7CUlB,EAiDnB0B,SAAW,SAACR,EAAOS,GAKjB,IAJA,IAAIL,EAAI,EACNM,EAAI,GACAC,EAAI7B,EAAKW,MACbmB,EAAI9B,EAAKU,MAJoBqB,EAAA,WAM7B,IAAMC,EAAQhC,EAAKiC,eACbC,EAAS,GAAGJ,EAAI,IAAKA,IAAKA,EAAI,IAAK,EAAG,EAAG,EAAGA,EAAI,EAAGA,EAAGA,EAAI,GAAGK,IACjE,SAAA/C,GAAG,OAAI4C,EAAQ5C,IAGZ8B,EAAMc,GAAO7C,MAAS+C,EAAOE,SAAST,KACzCT,EAAMc,GAAO7C,KAAO,EACpByC,EAAC,GAAAJ,OAAArD,OAAAsD,EAAA,EAAAtD,CAAOyD,GAAP,CAAUI,IACXV,MATGA,EAAIO,GAAGE,IAad,OADA/B,EAAKiB,SAAS,CAAEoB,SAAUT,IACnB,CAACV,EAAOU,IAnEE5B,EAyEnBsC,YAAc,SAACpB,EAAOqB,GACpB,IAAMhB,EAAOvB,EAAKuB,KACZO,EAAI9B,EAAKU,MAmCf,OAlCA6B,EAAcC,QAAQ,SAAAlB,GAEhBA,GAAKQ,IAGLR,EAAIQ,EAAI,GAAK,IACZR,EAAIQ,EAAI,GAAKA,IAAMA,EAAI,IACvBZ,EAAMI,EAAIQ,EAAI,GAAG3C,MAElB+B,EAAMI,EAAIQ,EAAI,GAAG1C,MAEd8B,EAAMI,EAAIQ,GAAG3C,MAAM+B,EAAMI,EAAIQ,GAAG1C,OAEhCkC,EAAIQ,EAAI,GAAKA,IAAM,GAAMZ,EAAMI,EAAIQ,EAAI,GAAG3C,MAC7C+B,EAAMI,EAAIQ,EAAI,GAAG1C,OAGjBkC,EAAIC,EAAOO,KAERR,EAAIQ,EAAI,GAAKA,IAAMA,EAAI,GAAMZ,EAAMI,EAAIQ,EAAI,GAAG3C,MACjD+B,EAAMI,EAAIQ,EAAI,GAAG1C,MAEd8B,EAAMI,EAAIQ,GAAG3C,MAAM+B,EAAMI,EAAIQ,GAAG1C,OAEhCkC,EAAIQ,EAAI,GAAKA,IAAM,GAAMZ,EAAMI,EAAIQ,EAAI,GAAG3C,MAC7C+B,EAAMI,EAAIQ,EAAI,GAAG1C,OAGjBkC,EAAI,GAAK,IAAMA,EAAI,GAAKQ,IAAMA,EAAI,IAAMZ,EAAMI,EAAI,GAAGnC,MACvD+B,EAAMI,EAAI,GAAGlC,MAEXkC,EAAI,EAAIC,IAASD,EAAI,GAAKQ,IAAM,IAAMZ,EAAMI,EAAI,GAAGnC,MACrD+B,EAAMI,EAAI,GAAGlC,QAEV8B,GA9GUlB,EAiHnBiC,aAAe,kBAAMQ,KAAKC,MAAMD,KAAKE,SAAW3C,EAAKuB,OAjHlCvB,EAmHnBP,KAAO,SAAAuC,GACL,IAAIY,EAAIzE,OAAAsD,EAAA,EAAAtD,CAAO6B,EAAK6C,MAAM3B,OAC1B0B,EAAKZ,GAAOvC,KAAO,EACnBmD,EAAKJ,QAAQ,SAAAxD,GACXA,EAAKC,SAAW,IAElBe,EAAKiB,SAAS,CACZC,MAAO0B,EACPxB,OAAQ,qCACRjB,QAAS,KA5HMH,EAgInB8C,YAAc,SAACd,EAAOjD,GACfiB,EAAK6C,MAAM1C,SAAYpB,EAAME,SAWhCe,EAAK+C,OAAOf,EAAOjD,GAVnBiB,EAAKiB,SACH,CACEd,QAAS,EACTe,MAAOlB,EAAKgD,UAAUhB,IAExB,WACEhC,EAAK+C,OAAOf,EAAOjD,MAxIRiB,EAgJnB+C,OAAS,SAACf,EAADiB,EAA0CC,GAAc,IAA9C/D,EAA8C8D,EAA9C9D,KAAMF,EAAwCgE,EAAxChE,SAAUC,EAA8B+D,EAA9B/D,QAASE,EAAqB6D,EAArB7D,IAC1C,KAAIH,GAAaC,IAAYgE,GAA7B,CACA,GAAI/D,EAEF,OAAOa,EAAKP,KAAKuC,GAEnB,GAAY,IAAR5C,EACEF,GAASc,EAAKgB,QAClBhB,EAAKkD,UAAUlB,OACV,CACL,IAAIY,EAAIzE,OAAAsD,EAAA,EAAAtD,CAAO6B,EAAK6C,MAAM3B,OAO1B,GANA0B,EAAKZ,GAAO/C,SAAW,EACnBC,IACFc,EAAKgB,QACL4B,EAAKZ,GAAO9C,QAAU,KAGlBc,EAAKe,WAAaf,EAAKuB,KAAOvB,EAAKW,MAIvC,OAHAiC,EAAKJ,QAAQ,SAAAxD,GACXA,EAAKC,SAAW,IAEXe,EAAKiB,SACV,CACEC,MAAO0B,EACPxB,OAAQ,oCACRjB,QAAS,GAEX,kBAAMH,EAAKmD,aAGfnD,EAAKiB,SAAS,CACZC,MAAO0B,OA/KM5C,EAoLnBmD,SAAW,WAELnD,EAAK6C,MAAMO,SAAWpD,EAAK6C,MAAMxB,SACnCgC,MAAK,uDAAA7B,OAED8B,aAAaC,GAFZ,UAAA/B,OAGM8B,aAAaE,KAHnB,WAAAhC,OAGiCxB,EAAK6C,MAAMvC,KAH5C,UAAAkB,OAID,EAD0D,IAAIiC,KAH7D,WAAAjC,OAIUxB,EAAK6C,MAAMrC,MAJrB,kBAAAgB,OAI2C8B,aAAaI,eA3L9C1D,EAgMnBkD,UAAY,SAAA5B,GACV,IAAIJ,EAAK/C,OAAAsD,EAAA,EAAAtD,CAAO6B,EAAK6C,MAAM3B,OAC3B,IAAIA,EAAMI,GAAGnC,OAAQ+B,EAAMI,GAAGrC,SAA9B,CACAiC,EAAMI,GAAGrC,SAAW,EACpBe,EAAKe,WACLf,EAAKiB,SAAS,CACZC,MAAOA,IAET,IAAMY,EAAI9B,EAAKU,MACba,EAAOvB,EAAKuB,KACVD,GAAKQ,IAEHR,EAAIQ,EAAI,GAAK,IAAMR,EAAIQ,EAAI,GAAKA,IAAMA,EAAI,GAC5C9B,EAAK+C,OAAOzB,EAAIQ,EAAI,EAAGZ,EAAMI,EAAIQ,EAAI,IAAI,GAE3C9B,EAAK+C,OAAOzB,EAAIQ,EAAGZ,EAAMI,EAAIQ,IAAI,IAE5BR,EAAIQ,EAAI,GAAKA,IAAM,GAAG9B,EAAK+C,OAAOzB,EAAIQ,EAAI,EAAGZ,EAAMI,EAAIQ,EAAI,IAAI,IAElER,EAAIC,EAAOO,KAERR,EAAIQ,EAAI,GAAKA,IAAMA,EAAI,GAC1B9B,EAAK+C,OAAOzB,EAAIQ,EAAI,EAAGZ,EAAMI,EAAIQ,EAAI,IAAI,GAE3C9B,EAAK+C,OAAOzB,EAAIQ,EAAGZ,EAAMI,EAAIQ,IAAI,IAE5BR,EAAIQ,EAAI,GAAKA,IAAM,GAAG9B,EAAK+C,OAAOzB,EAAIQ,EAAI,EAAGZ,EAAMI,EAAIQ,EAAI,IAAI,IAGlER,EAAI,GAAK,IAAMA,EAAI,GAAKQ,IAAMA,EAAI,GACpC9B,EAAK+C,OAAOzB,EAAI,EAAGJ,EAAMI,EAAI,IAAI,GAE/BA,EAAI,EAAIC,IAASD,EAAI,GAAKQ,IAAM,GAClC9B,EAAK+C,OAAOzB,EAAI,EAAGJ,EAAMI,EAAI,IAAI,KAjOlBtB,EAoOnB2D,WAAa,SAAC3B,EAAOjD,EAAO6E,GAG1B,GAFAA,EAAEC,kBAEG7D,EAAK6C,MAAM1C,QAAS,OAAOH,EAAK8C,YAAYd,EAAOjD,EAAO6E,GAE/D,IAAI7E,EAAME,SAAV,CACA,IAAKF,EAAMG,SAAWc,EAAKgB,QAAUhB,EAAKW,MACxC,OAAOmD,sBAAoBC,KAApB,gBAAAvC,OACWxB,EAAKW,MADhB,UAEL,SACA,KAEJ,IAAIiC,EAAIzE,OAAAsD,EAAA,EAAAtD,CAAO6B,EAAK6C,MAAM3B,OAC1B0B,EAAKZ,GAAO9C,SAAW0D,EAAKZ,GAAO9C,QACnCc,EAAKgB,OAAS4B,EAAKZ,GAAO9C,QAAU,GAAK,EACzCc,EAAKiB,SAAS,CACZC,MAAO0B,MApPQ5C,EAwPnBI,QAAU,WACR,IAAIE,EAAON,EAAK6C,MAAMvC,KAAK0D,MAAM,KAC7BnC,EAAIoC,OAAO3D,EAAK,IAChB4D,EAAID,OAAO3D,EAAK,IAAM,EAE1BuB,GAAW,KADXqC,GAAK,IACU,EAAI,EACnBA,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EACvBrC,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EACvB7B,EAAKiB,SAAS,CACZX,KAAMuB,EAAI,IAAMqC,KAjQDlE,EAqQnBmE,MAAQ,WACN,IAAKnE,EAAK6C,MAAM1C,QACd,OAAO2D,sBAAoBC,KAAK,wBAAyB,SAAU,KACrE,IAAInB,EAAIzE,OAAAsD,EAAA,EAAAtD,CAAO6B,EAAK6C,MAAM3B,OAC1BlB,EAAK6C,MAAMR,SAASG,QAAQ,SAAArD,GAC1ByD,EAAKzD,GAAMF,SAAW,EAClB2D,EAAKzD,GAAMD,UACb0D,EAAKzD,GAAMD,QAAU,EACrBc,EAAKgB,WAGThB,EAAKiB,SAAS,CACZC,MAAO0B,EACPvB,QAAS,KAlRMrB,EAsRnBoE,YAAc,WACZpE,EAAKQ,QAAUR,EAAKQ,MAAQ,EAC5BR,EAAKS,OAASF,EAAOP,EAAKQ,OAAOC,OACjCT,EAAKU,MAAQH,EAAOP,EAAKQ,OAAOE,MAChCV,EAAKW,MAAQJ,EAAOP,EAAKQ,OAAOG,MAChCX,EAAKuB,KAAOvB,EAAKS,OAAST,EAAKU,MAC/BV,EAAKe,SAAW,EAChBf,EAAKgB,MAAQ,EACbhB,EAAKiB,SAAS,CACZC,MAAOlB,EAAKmB,YACZC,OAAQ,aACRjB,QAAS,EACTG,KAAM,QACN+B,SAAU,GACVhB,QAAS,EACTb,MAAOD,EAAOP,EAAKQ,OAAOA,SArSXR,EAySnBqE,YAAc,WACZ,OAAOrE,EAAK6C,MAAM3B,MAAMiB,IAAI,SAACpD,EAAOiD,GAClC,OACEtC,EAAAC,EAAAC,cAAC0E,EAAD,CACE1F,IAAKoD,EACL1C,QAAS,kBAAMU,EAAK8C,YAAYd,EAAOjD,IACvCQ,cAAe,SAAAqE,GAAC,OAAI5D,EAAK2D,WAAW3B,EAAOjD,EAAO6E,IAClD5E,KAAMD,OA9SZiB,EAAKe,SAAW,EAChBf,EAAKgB,MAAQ,EACbhB,EAAKQ,MAAQ,EACbR,EAAKS,OAAS1B,EAAM0B,OACpBT,EAAKU,MAAQ3B,EAAM2B,MACnBV,EAAKW,MAAQ5B,EAAM4B,MACnBX,EAAKuB,KAAOxC,EAAM0B,OAAS1B,EAAM2B,MACjCV,EAAK6C,MAAQ,CACX3B,MAAOlB,EAAKmB,YACZC,OAAQ,aACRjB,QAAS,EACTG,KAAM,QACN+B,SAAU,GACVhB,QAAS,EACT+B,OAAQE,aAAaF,OACrB5C,MAAOzB,EAAMyB,OAjBER,EADrB,OAAA7B,OAAAO,EAAA,EAAAP,CAAAyC,EAAA1C,GAAAC,OAAAQ,EAAA,EAAAR,CAAAyC,EAAA,EAAAhC,IAAA,YAAAC,MAAA,SAsBYmD,GACR,IAAId,EAAQ7C,KAAK8C,YAEjB,OADAD,EAAQ7C,KAAKiE,YAAL9D,MAAAH,KAAAF,OAAAsD,EAAA,EAAAtD,CAAoBE,KAAKqD,SAASR,EAAOc,OAxBrD,CAAApD,IAAA,SAAAC,MAAA,WAyTI,OACEa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4E,SAAA,KACE7E,EAAAC,EAAAC,cAAC4E,EAAA,sBAAD,MACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACE/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKC,GAAI,IACPjF,EAAAC,EAAAC,cAAA,MAAIgF,MANM,CAAEC,MAAO,YAMIxG,KAAKwE,MAAMzB,SAEpC1B,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKC,GAAI,IACPjF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAQC,QAAQ,UAAUzF,QAASjB,KAAKyC,SAAxC,YAEU,IACVpB,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,QAAQ,OACRzF,QAASjB,KAAK8F,MACda,SAAU3G,KAAKwE,MAAMxB,SAEpB,6BACO,IACV3B,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAQC,QAAQ,SAASzF,QAASjB,KAAK+F,aACpC/F,KAAKwE,MAAMrC,QAGhBd,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKC,GAAI,IACPjF,EAAAC,EAAAC,cAACqF,EAAD,CACE9E,QAAS9B,KAAKwE,MAAM1C,QACpBG,KAAMjC,KAAKwE,MAAMvC,KACjBF,QAAS/B,KAAK+B,WAGlBV,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKC,GAAI,GAAInF,UAAW,QAAUnB,KAAKwE,MAAMrC,OAC1CnC,KAAKgG,qBAvVlBzD,EAAA,CAA2Bd,qCCSZoF,EAtBf,SAAAhH,GAAA,SAAAgH,IAAA,OAAA/G,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,GAAA/G,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA+G,EAAAhH,GAAAC,OAAAQ,EAAA,EAAAR,CAAA+G,EAAA,EAAAtG,IAAA,SAAAC,MAAA,WAEI,OACEa,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAQC,GAAG,OAAOL,QAAQ,QACxBrF,EAAAC,EAAAC,cAACuF,EAAA,EAAOE,MAAR,KACE3F,EAAAC,EAAAC,cAAA,OACE0F,IAAI,GACJC,IAAI,cACJ7E,MAAM,KACND,OAAO,KACPjB,UAAU,6BAEX,gBAEHE,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAKhG,UAAU,WACbE,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,sBAfVP,EAAA,CAA4BpF,qBCoBb4F,0LAfX,OACEhG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4E,SAAA,KACE7E,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWhB,MAAO,CAACnE,OAAQ,UACzBf,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAKjF,UAAU,wCACbE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKC,GAAI,IACPjF,EAAAC,EAAAC,cAACiG,EAAD,CAAOpF,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAAIH,MAAO,oBAR1CV,cCMEgG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.25043be4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Cell extends Component {\r\n  getValue() {\r\n    const { revealed, flagged, mine, val } = this.props.cell;\r\n    if (!revealed) return flagged ? '🚩' : null;\r\n    if (mine) return '💣';\r\n    return val ? val : null;\r\n  }\r\n\r\n  render() {\r\n    const { cell, onClick, onContextMenu } = this.props;\r\n    const numClasses = [\r\n      ' one',\r\n      ' two',\r\n      ' three',\r\n      ' four',\r\n      ' five',\r\n      ' six',\r\n      ' seven',\r\n      ' eight'\r\n    ];\r\n    let className =\r\n      'cell' +\r\n      (cell.revealed ? ' revealed' : '') +\r\n      (cell.revealed && cell.val ? numClasses[cell.val - 1] : '') +\r\n      (cell.flagged ? ' flagged' : '') +\r\n      (cell.boom ? ' boom' : '');\r\n    return (\r\n      <div\r\n        onClick={onClick}\r\n        className={className}\r\n        onContextMenu={onContextMenu}\r\n      >\r\n        {this.getValue()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Timer extends Component {\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      if (this.props.started) {\r\n        this.props.clockIn();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    return <div className='clock'>{this.props.time}</div>;\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Cell from './Cell.jsx';\r\nimport Timer from './Timer.jsx';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst levels = [\r\n  { level: 'Easy', height: 8, width: 8, mines: 10 },\r\n  { level: 'Hard', height: 10, width: 10, mines: 25 },\r\n  { level: 'Expert', height: 12, width: 12, mines: 40 }\r\n];\r\n\r\nexport class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.progress = 0;\r\n    this.flags = 0;\r\n    this.level = 0;\r\n    this.height = props.height;\r\n    this.width = props.width;\r\n    this.mines = props.mines;\r\n    this.size = props.height * props.width;\r\n    this.state = {\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0,\r\n      time: '00:00',\r\n      minesLoc: [],\r\n      godMode: 0,\r\n      logged: localStorage.logged,\r\n      level: props.level\r\n    };\r\n  }\r\n\r\n  fillBoard(index) {\r\n    let board = this.initBoard();\r\n    board = this.addNeighbor(...this.addMines(board, index));\r\n    return board;\r\n  }\r\n\r\n  newGame = () => {\r\n    this.progress = 0;\r\n    this.flags = 0;\r\n    this.setState({\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0,\r\n      godMode: 0,\r\n      time: '00:00'\r\n    });\r\n  };\r\n\r\n  // Fill board with nada\r\n  initBoard = () => {\r\n    let board = [];\r\n    for (let i = 0; i < this.size; i++) {\r\n      board = [...board, { mine: 0, revealed: 0, flagged: 0, val: 0, boom: 0 }];\r\n    }\r\n    return board;\r\n  };\r\n\r\n  // Fill board with mines\r\n  addMines = (board, cellIndex) => {\r\n    let i = 0,\r\n      j = [];\r\n    const m = this.mines,\r\n      w = this.width;\r\n    while (i < m) {\r\n      const index = this.randomNumber();\r\n      const square = [-(w + 1), -w, -(w - 1), -1, 0, 1, w - 1, w, w + 1].map(\r\n        val => index + val\r\n      );\r\n      // Because first click is always safe - make sure the square does not include first click's position\r\n      if (!board[index].mine && !square.includes(cellIndex)) {\r\n        board[index].mine = 1;\r\n        j = [...j, index];\r\n        i++;\r\n      }\r\n    }\r\n    this.setState({ minesLoc: j });\r\n    return [board, j];\r\n  };\r\n\r\n  // Fill board with moves\r\n  // Original algorithm: traverse through board from first location to last location then add one for each bomb.\r\n  // New algorithm: map through each bomb and add one to neighbors\r\n  addNeighbor = (board, minesLocation) => {\r\n    const size = this.size;\r\n    const w = this.width;\r\n    minesLocation.forEach(i => {\r\n      // top neighbors\r\n      if (i >= w) {\r\n        // top left\r\n        if (\r\n          i - w - 1 >= 0 &&\r\n          (i - w - 1) % w !== w - 1 &&\r\n          !board[i - w - 1].mine\r\n        )\r\n          board[i - w - 1].val++;\r\n        // top\r\n        if (!board[i - w].mine) board[i - w].val++;\r\n        // top right\r\n        if ((i - w + 1) % w !== 0 && !board[i - w + 1].mine)\r\n          board[i - w + 1].val++;\r\n      }\r\n      // bottom neighbors\r\n      if (i < size - w) {\r\n        // btm left\r\n        if ((i + w - 1) % w !== w - 1 && !board[i + w - 1].mine)\r\n          board[i + w - 1].val++;\r\n        // btm\r\n        if (!board[i + w].mine) board[i + w].val++;\r\n        // btm right\r\n        if ((i + w + 1) % w !== 0 && !board[i + w + 1].mine)\r\n          board[i + w + 1].val++;\r\n      }\r\n      // left\r\n      if (i - 1 >= 0 && (i - 1) % w !== w - 1 && !board[i - 1].mine)\r\n        board[i - 1].val++;\r\n      // right\r\n      if (i + 1 < size && (i + 1) % w !== 0 && !board[i + 1].mine)\r\n        board[i + 1].val++;\r\n    });\r\n    return board;\r\n  };\r\n\r\n  randomNumber = () => Math.floor(Math.random() * this.size);\r\n\r\n  boom = index => {\r\n    let copy = [...this.state.board];\r\n    copy[index].boom = 1;\r\n    copy.forEach(cell => {\r\n      cell.revealed = 1;\r\n    });\r\n    this.setState({\r\n      board: copy,\r\n      status: '😢 You lost 😢',\r\n      started: 0\r\n    });\r\n  };\r\n\r\n  handleClick = (index, props) => {\r\n    if (!this.state.started && !props.revealed) {\r\n      this.setState(\r\n        {\r\n          started: 1,\r\n          board: this.fillBoard(index)\r\n        },\r\n        () => {\r\n          this.reveal(index, props);\r\n        }\r\n      );\r\n    } else {\r\n      this.reveal(index, props);\r\n    }\r\n  };\r\n\r\n  reveal = (index, { mine, revealed, flagged, val }, floodFill) => {\r\n    if (revealed || (flagged && !floodFill)) return;\r\n    if (mine) {\r\n      // Kaboom T_T\r\n      return this.boom(index);\r\n    }\r\n    if (val === 0) {\r\n      if (flagged) this.flags--;\r\n      this.floodFill(index);\r\n    } else {\r\n      let copy = [...this.state.board];\r\n      copy[index].revealed = 1;\r\n      if (flagged) {\r\n        this.flags--;\r\n        copy[index].flagged = 0;\r\n      }\r\n      // Check if win\r\n      if (++this.progress === this.size - this.mines) {\r\n        copy.forEach(cell => {\r\n          cell.revealed = 1;\r\n        });\r\n        return this.setState(\r\n          {\r\n            board: copy,\r\n            status: '🎉 YOU WON 🎉',\r\n            started: 0\r\n          },\r\n          () => this.sendData()\r\n        );\r\n      }\r\n      this.setState({\r\n        board: copy\r\n      });\r\n    }\r\n  };\r\n\r\n  sendData = () => {\r\n    // Cheating should not be added to top :D\r\n    if (this.state.logged && !this.state.godMode) {\r\n      fetch(\r\n        `https://cryptic-harbor-11039.herokuapp.com/score?id=${\r\n          localStorage.id\r\n        }&name=${localStorage.name}&score=${this.state.time}&time=${new Date() *\r\n          1}&level=${this.state.level}&access_token=${localStorage.accessToken}`\r\n      );\r\n    }\r\n  };\r\n\r\n  floodFill = i => {\r\n    let board = [...this.state.board];\r\n    if (board[i].mine || board[i].revealed) return;\r\n    board[i].revealed = 1;\r\n    this.progress++;\r\n    this.setState({\r\n      board: board\r\n    });\r\n    const w = this.width,\r\n      size = this.size;\r\n    if (i >= w) {\r\n      // top left\r\n      if (i - w - 1 >= 0 && (i - w - 1) % w !== w - 1)\r\n        this.reveal(i - w - 1, board[i - w - 1], true);\r\n      // top\r\n      this.reveal(i - w, board[i - w], true);\r\n      // top right\r\n      if ((i - w + 1) % w !== 0) this.reveal(i - w + 1, board[i - w + 1], true);\r\n    }\r\n    if (i < size - w) {\r\n      // btm left\r\n      if ((i + w - 1) % w !== w - 1)\r\n        this.reveal(i + w - 1, board[i + w - 1], true);\r\n      // btm\r\n      this.reveal(i + w, board[i + w], true);\r\n      // btm right\r\n      if ((i + w + 1) % w !== 0) this.reveal(i + w + 1, board[i + w + 1], true);\r\n    }\r\n    // left\r\n    if (i - 1 >= 0 && (i - 1) % w !== w - 1)\r\n      this.reveal(i - 1, board[i - 1], true);\r\n    // right\r\n    if (i + 1 < size && (i + 1) % w !== 0)\r\n      this.reveal(i + 1, board[i + 1], true);\r\n  };\r\n\r\n  rightClick = (index, props, e) => {\r\n    e.preventDefault();\r\n    // If first click then reveal instead of flagging.\r\n    if (!this.state.started) return this.handleClick(index, props, e);\r\n    // Only flag-able if not revealed.\r\n    if (props.revealed) return;\r\n    if (!props.flagged && this.flags === this.mines)\r\n      return NotificationManager.info(\r\n        `You only had ${this.mines} flags`,\r\n        'Uh oh!',\r\n        3000\r\n      );\r\n    let copy = [...this.state.board];\r\n    copy[index].flagged = !copy[index].flagged;\r\n    this.flags += copy[index].flagged ? 1 : -1;\r\n    this.setState({\r\n      board: copy\r\n    });\r\n  };\r\n\r\n  clockIn = () => {\r\n    let time = this.state.time.split(':');\r\n    let m = Number(time[0]);\r\n    let s = Number(time[1]) + 1;\r\n    s %= 60;\r\n    m += s === 0 ? 1 : 0;\r\n    s = s < 10 ? '0' + s : s;\r\n    m = m < 10 ? '0' + m : m;\r\n    this.setState({\r\n      time: m + ':' + s\r\n    });\r\n  };\r\n\r\n  cheat = () => {\r\n    if (!this.state.started)\r\n      return NotificationManager.info('Start the game first!', 'Uh oh!', 3000);\r\n    let copy = [...this.state.board];\r\n    this.state.minesLoc.forEach(mine => {\r\n      copy[mine].revealed = 1;\r\n      if (copy[mine].flagged) {\r\n        copy[mine].flagged = 0;\r\n        this.flags--;\r\n      }\r\n    });\r\n    this.setState({\r\n      board: copy,\r\n      godMode: 1\r\n    });\r\n  };\r\n\r\n  changeLevel = () => {\r\n    this.level = ++this.level % 3;\r\n    this.height = levels[this.level].height;\r\n    this.width = levels[this.level].width;\r\n    this.mines = levels[this.level].mines;\r\n    this.size = this.height * this.width;\r\n    this.progress = 0;\r\n    this.flags = 0;\r\n    this.setState({\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0,\r\n      time: '00:00',\r\n      minesLoc: [],\r\n      godMode: 0,\r\n      level: levels[this.level].level\r\n    });\r\n  };\r\n\r\n  renderBoard = () => {\r\n    return this.state.board.map((props, index) => {\r\n      return (\r\n        <Cell\r\n          key={index}\r\n          onClick={() => this.handleClick(index, props)}\r\n          onContextMenu={e => this.rightClick(index, props, e)}\r\n          cell={props}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const beautiful = { color: '#febd16' };\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <Row>\r\n          <Col md={12}>\r\n            <h1 style={beautiful}>{this.state.status}</h1>\r\n          </Col>\r\n          <Col md={12}>\r\n            <Button variant='primary' onClick={this.newGame}>\r\n              New Game\r\n            </Button>{' '}\r\n            <Button\r\n              variant='info'\r\n              onClick={this.cheat}\r\n              disabled={this.state.godMode}\r\n            >\r\n              {'Defuse Mines 👀'}\r\n            </Button>{' '}\r\n            <Button variant='danger' onClick={this.changeLevel}>\r\n              {this.state.level}\r\n            </Button>\r\n          </Col>\r\n          <Col md={12}>\r\n            <Timer\r\n              started={this.state.started}\r\n              time={this.state.time}\r\n              clockIn={this.clockIn}\r\n            />\r\n          </Col>\r\n          <Col md={12} className={'game ' + this.state.level}>\r\n            {this.renderBoard()}\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport {Navbar, Nav, NavbarBrand} from 'react-bootstrap';\r\n\r\nexport class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <img\r\n            alt=\"\"\r\n            src=\"../logo.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n          {' MineSweeper'}\r\n        </Navbar.Brand>\r\n        <Nav className=\"ml-auto\">\r\n          <NavbarBrand>Loc Mai</NavbarBrand>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {Component} from 'react';\r\nimport Board from './components/Board';\r\nimport NavBar from './components/NavBar';\r\nimport {Container, Col, Row} from 'react-bootstrap';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <Container style={{height: '100vh'}}>\r\n          <Row className=\"h-100 align-items-center text-center\">\r\n            <Col md={12}>\r\n              <Board height={8} width={8} mines={10} level={'Easy'} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}